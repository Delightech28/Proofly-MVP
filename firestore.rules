rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection: allow users to create and manage their own profile,
    // but disallow client updates to protected counters and referral audit fields.
    match /users/{userId} {
      // Owners can read their profile; others can read only if the doc marks it public.
      allow get: if request.auth != null && (request.auth.uid == userId || (resource.data.isPublic == true));
      // Allow real-time listeners for the user's own profile
      allow read: if request.auth != null && (request.auth.uid == userId || (resource.data.isPublic == true));
      // Allow listing (queries) for authenticated users, but require client queries 
      // to include a filter for public profiles
      allow list: if request.auth != null;

      allow create: if request.auth != null
                    && request.auth.uid == userId
                    && request.resource.data.uid == userId
                    && ( !('xp' in request.resource.data) || request.resource.data.xp == 0 )
                    && ( !('referralsXp' in request.resource.data) || request.resource.data.referralsXp == 0 )
                    && ( !('referralsCount' in request.resource.data) || request.resource.data.referralsCount == 0 );

      allow update: if request.auth != null
                    && request.auth.uid == userId;

      allow delete: if false;
    }

    // Referral requests: clients may CREATE a request when signing up with a referral code.
    // Only the authenticated new user may create their own request; server (Cloud Function)
    // will process it and mark it processed.
    match /referralRequests/{reqId} {
      // Allow the signed-in user to create a referral request for themselves.
      allow create: if request.auth != null
                    && request.resource.data.newUid == request.auth.uid
                    && request.resource.data.code is string
                    && request.resource.data.code.size() > 0
                    && request.resource.data.code.size() <= 128
                    // prevent client from setting server-only fields
                    && !( 'processed' in request.resource.data )
                    && !( 'result' in request.resource.data )
                    && !( 'processedAt' in request.resource.data )
                    // optional: prevent clients from faking createdAt
                    && !( 'createdAt' in request.resource.data );

      // Allow the owner to read their specific request doc
      allow get: if request.auth != null && resource.data.newUid == request.auth.uid;

      // Disallow listing the whole collection from client
      allow list: if false;

      // Clients cannot update/delete requests; only server should
      allow update, delete: if false;
    }

    // referrals audit collection: only server / admin code should write audit records.
    match /referrals/{docId} {
      // Allow authenticated read for audit viewing if desired; tighten as needed
      allow read: if request.auth != null;
      allow create, update, delete: if false;
    }

    // referral summaries: allow users to read their own referral summary
    match /referralSummaries/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow create, update, delete: if false; // Only server should manage these
    }

    // Default: deny everything else from client
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
